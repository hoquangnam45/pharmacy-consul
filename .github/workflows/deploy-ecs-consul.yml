on:
  - push
  - workflow_dispatch
env:
  GITHUB_USERNAME: ${{ github.actor }}
  GITHUB_PASSWORD: ${{ secrets.PAT }}
  MVN_CACHE_FOLDER: lib/
  GO_CACHE_PATH: cache/
jobs:
  test-and-build:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_NAME: ${{ steps.export-env.outputs.IMAGE_NAME }}
      PROJECT_NAME: ${{ steps.export-env.outputs.PROJECT_NAME }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
         go-version: '1.19.4'
      - run: echo GOPATH=$(go env GOPATH) >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.GOPATH }}
          key: ${{ hashFiles('go.sum') }}
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      - run: go get
      - run: test -z $(gofmt -l .)
      - run: go test .
      - id: export-env
        run: |
          echo PROJECT_NAME=${{ github.event.repository.name }} | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }} | tee -a $GITHUB_ENV $GITHUB_OUTPUT
      - run: cp -r $GOPATH $(pwd)/$GO_CACHE_PATH
      - run: docker build -t $IMAGE_NAME .
      - run: docker push $IMAGE_NAME
  deploy_to_ecs:
    runs-on: ubuntu-latest
    needs: test-and-build
    env:
      IMAGE_NAME: ${{ needs.test-and-build.outputs.IMAGE_NAME }}
      PROJECT_NAME: ${{ needs.test-and-build.outputs.PROJECT_NAME }}
      DEPLOYMENT_TYPE: ECS
      PORT_MAPPINGS: 8500:8500, 8600:8600, 8300:8300, 8301:8301, 8302:8302
      EXPORTED_ENVIRONMENTS: CONSUL_PEERS_URL
      IS_BOOTSTRAP: true
      CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
      CDK_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - run: |
          echo "STACK_ID=$PROJECT_NAME-ecsDeploymentStack" >> $GITHUB_ENV
          echo "CONTAINER_NAME=$PROJECT_NAME" >> $GITHUB_ENV
          echo "TASK_FAMILY=$PROJECT_NAME-td" >> $GITHUB_ENV
          echo "SERVICE_NAME=$PROJECT_NAME-svc" >> $GITHUB_ENV
          echo "HEALTH_CHECK_COMMAND=curl http://localhost:8500/" >> $GITHUB_ENV
      - run: |
          echo "CONSUL_PEERS_URL=$SERVICE_NAME.pharmacy-cluster" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          repository: hoquangnam45/pharmacy-infra
      - uses: ./actions/setup-deployment
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/cache@v3
        with:
          path: ${{ env.MVN_CACHE_FOLDER }}
          key: ${{ hashFiles('pom.xml') }}
      - run: npx cdk deploy --app "./mvnw -Dmaven.repo.local=$MVN_CACHE_FOLDER -e -q compile exec:java -U" --require-approval never